@page "/"
@using System.Security.Claims
@using Blazored.Modal
@using Blazored.Modal.Services
@using Bulldog.Infrastructure.Services.DTO
@using BulldogApiFrontend.Services
@using BulldogApiFrontend.Services.IServices
@using Microsoft.AspNetCore.Authorization
@using System.IdentityModel.Tokens.Jwt
@inject NavigationManager NavigationManager
@inject IServiceApiService ServiceApiService
@inject IAuthenticationService AuthenticationService
@inject IUserService UserService
@attribute [Authorize]

<PageTitle>Home</PageTitle>
<EmployeeSchedule></EmployeeSchedule>


@code
{
    private bool IsConfigured;
    private string email;
    private UserDto user;
    protected override async Task OnInitializedAsync()
    {
        //get do bazy isCofigured a nie z tokena. Token przeciez ma dane takie jak byly w momencie logowania 
        var jwtToken = await AuthenticationService.GetJwtAsync();
        email = GetEmailFromToken(jwtToken);
        if (!string.IsNullOrEmpty(jwtToken))
        {
            user = await UserService.GetUserByEmail(email);
            IsConfigured = user.IsConfigured;
        }
        if (IsConfigured == false)
        {
            NavigationManager.NavigateTo("/openinghours");
        }
    }

    private string GetEmailFromToken(string token)
    {
        var jwt = new JwtSecurityToken(token);
        return jwt.Claims.First(x => x.Type == ClaimTypes.Email).Value;
    }
}
