@page "/employees"
@using Bulldog.Infrastructure.Services.DTO
@using BulldogApiFrontend.Services
@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@inject IAuthenticationService AuthenticationService
@inject IServiceApiService ServiceApiService
<MudContainer>
    <MudGrid>
        <MudItem xs="12" md="6">
            <h3>Employees:</h3>
            <MudList>
                @foreach (var employee in _employees)
                {
                    <MudListItem>
                        <MudListItemText>
                            @employee.Name
                        </MudListItemText>
                    </MudListItem>
                }
            </MudList>
        </MudItem>
        <MudItem xs="12" md="6">
            <h3>Services:</h3>
            <MudList>
                @foreach (var service in _services)
                {
                    <MudListItem>
                        <MudListItemText>
                            @service.Name
                        </MudListItemText>
                    </MudListItem>
                }
            </MudList>
        </MudItem>
    </MudGrid>
    <MudButton Color="Color.Primary">Dodaj</MudButton>
</MudContainer>

@code {
    private string UserId;
    private Guid EmployeeId;
    IList<EmployeeDto> _employees = new List<EmployeeDto>();
    IList<ServiceDto> _services = new List<ServiceDto>();

    protected override async Task OnInitializedAsync()
    {
        var jwtToken = await AuthenticationService.GetJwtAsync();
        if (!string.IsNullOrEmpty(jwtToken))
        {
            UserId = GetIdFromToken(jwtToken);
        }

        var company = await ServiceApiService.GetCompanyByUserId(UserId);
        _employees = await ServiceApiService.GetAllEmployeesForCompanyId(company.Id);
        _services = await ServiceApiService.GetServicesByEmployeeId(_employees[0].Id);
    }

    private string GetIdFromToken(string token)
    {
        var jwt = new JwtSecurityToken(token);
        return jwt.Claims.First(x => x.Type == ClaimTypes.NameIdentifier).Value;
    }
}
