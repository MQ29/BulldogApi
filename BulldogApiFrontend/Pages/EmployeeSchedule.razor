@page "/Schedule/{EmployeeId:guid}"
@using Bulldog.Infrastructure.Services.DTO
@using BulldogApiFrontend.Services
@inject IServiceApiService ServiceApiService
@inject IDialogService DialogService
<h3>EmployeeProfile</h3>

<RadzenScheduler Data="@reservations" TItem="ReservationDto" StartProperty="StartDate" EndProperty="FinishDate" TextProperty="ServiceName"
                 SlotSelect=@OnSlotSelect AppointmentSelect=@OnAppointmentSelect>
    <RadzenDayView />
    <RadzenWeekView />
    <RadzenMonthView />
    <RadzenYearView />
</RadzenScheduler>

@code {
    [Parameter]
    public Guid EmployeeId { get; set; }
    IList<ReservationDto> reservations = new List<ReservationDto>();
    RadzenScheduler<ReservationDto> scheduler;
    private DialogParameters mudparameters = new DialogParameters();
    protected override async Task OnInitializedAsync()
    {
        await LoadReservations();
    }

    private async Task LoadReservations()
    {
        reservations = await ServiceApiService.GetReservations(EmployeeId);
    }

    private async Task OnSlotSelect(SchedulerSlotSelectEventArgs args)
    {
        if(args.View.Text != "Year")
        {

        }
    }

    private async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<ReservationDto> args)
    {
        mudparameters.Add(nameof(ReservationDto.ServiceName), args.Data.ServiceName);
        mudparameters.Add(nameof(ReservationDto.StartDate), args.Data.StartDate);
        mudparameters.Add(nameof(ReservationDto.FinishDate), args.Data.FinishDate);

        var options = new MudBlazor.DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<AppointmentPage>("AppointmentDetails", mudparameters, options);

    }
}
