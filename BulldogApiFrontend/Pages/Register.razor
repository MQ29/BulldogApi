@page "/register"
@using Bulldog.Core.Domain
@using BulldogApiFrontend.Services
@inject ServiceApiService ServiceApiService
<AuthorizeView>
    <Authorized>
        @* <div class="alert alert-success">You are logged in as @context.User.Identity?.Name.</div> *@
    </Authorized>
    <NotAuthorized>
        <h1>Register</h1>
        @if (success)
        {
            <div class="alert alert-success">You successfully registered. Now you can <a href="login">login</a>.</div>
        }
        else
        {
            if (errors)
            {
                foreach (var error in errorList)
                {
                    <div class="alert alert-danger">@error</div>
                }
            }
            <div class="flex-outer">

                <div>
                    <label for="email">
                        Email:
                    </label>
                    <input autofocus autocomplete="on" required id="email" name="emailInput" placeholder="Enter your email address" type="email" @bind-value="registerModel.Email" />
                </div>

                <div>
                    <label for="username">
                        Username:
                    </label>
                    <input required id="username" name="usernameInput" placeholder="Enter your username" type="text" @bind-value="registerModel.Username" />
                </div>

                <div>
                    <label for="password">
                        Password:
                    </label>
                    <input required id="password" name="passwordInput" placeholder="Enter your password" type="password" @bind-value="registerModel.Password" /><br />
                </div>


                <div>
                    <button @onclick="DoRegisterAsync">Register</button>
                </div>
            </div>
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private RegisterModel registerModel = new RegisterModel(); 
    private bool success = false;
    private bool errors = false;
    private List<string> errorList = new List<string>();
    public async Task DoRegisterAsync()
    {
        // try
        // {
        //     await ServiceApiService.Register(registerModel);
        //     success = true;
        // }
        // catch (Exception ex)
        // {
        //     errors = true;
        //     errorList.Add($"Błąd rejestracji: {ex.Message}");
        // }
    }
}
