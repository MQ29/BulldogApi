@using Bulldog.Infrastructure.Services.DTO
@using BulldogApiFrontend.Services
@page "/reservation"
<h3>Reservation</h3>
@inject IServiceApiService ServiceApiService
@inject IModalService modal
@if (services != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Usługa</th>
                <th>Cena</th>
                <th>Czas trwania</th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var service in services)
            {
                <tr>
                    <td>@service.Name</td>
                    <td>@service.Price zł</td>
                    <td>@service.Duration min</td>
                    <td>
                         @* <a href="@($"form/{service.Id}")" class="btn btn-primary">Umów</a> *@
                        <button @onclick="@(() => {AddServiceIdParameter(service.Id); OpenModal();})" class="btn btn-primary">Book</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Loading services...</p>
}



@code {
    private IList<ServiceDto> services;
    private Guid selectedServiceId;
    private ModalParameters parameters = new ModalParameters();
    protected override async Task OnInitializedAsync()
    {
        services = await ServiceApiService.GetAllServies();

    }
    private void AddServiceIdParameter(Guid serviceId)
    {
        parameters.Add(nameof(Form.Id), serviceId);
    }
    private void OpenModal()
    {
        var options = new ModalOptions()
            {
                AnimationType = ModalAnimationType.None
            };
        modal.Show<Form>("Wybierz pracownika", parameters, options);

    }

}
